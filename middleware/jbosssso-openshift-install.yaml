- name: Installing JBoss SSO for OpenShift (https://access.redhat.com/documentation/en/red-hat-jboss-middleware-for-openshift/3/paged/red-hat-jboss-sso-for-openshift/)
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
     username: demo
     password: r3dh4t1!
     namespace: jbosssso
     domain: cloudapps.testdrive.com
  tasks:
     - name: "Switching to OpenShift's Administrator: system:admin"
       command: oc login --username=system:admin

     - name: "Downloading all the necessary templates into Project OpenShift: https://github.com/jboss-openshift/application-templates"
       command: oc create --namespace openshift --filename https://raw.githubusercontent.com/jboss-openshift/application-templates/ose-v1.3.7/jboss-image-streams.json
       ignore_errors: True

     - name: Replacing an existing templates 
       command: oc replace --namespace openshift --filename https://raw.githubusercontent.com/jboss-openshift/application-templates/ose-v1.3.7/jboss-image-streams.json
       ignore_errors: True

     - name: Import the RH-SSO for OpenShift 7.1 templates
       command: oc create --namespace openshift --filename https://raw.githubusercontent.com/jboss-openshift/application-templates/ose-v1.3.7/sso/{{ item }}
       with_items:
           - sso71-https.json
           - sso71-mysql-persistent.json
           - sso71-mysql.json
           - sso71-postgresql-persistent.json
           - sso71-postgresql.json
       ignore_errors: True

     - name: Install the RH-SSO for OpenShift 7.1 image streams in the openshift project
       command: oc --namespace openshift import-image redhat-sso71-openshift

     - name: "Deleting the current project: {{ namespace }}"
       command: oc delete project {{ namespace }}
       ignore_errors: True

     - name: "Attempting to create a new project: {{ namespace }}"
       command: oadm new-project {{ namespace }} --admin={{ username }} --display-name="Red Hat JBoss SSO"
       register: create_namespace
       until: create_namespace.rc == 0
       retries: 10
       delay: 10

#     - name: Deleting any previously OpenShift's resources created
#       command: oc delete {{ item }} --namespace {{ namespace }}
#       with_items:
#          - secret/sso-jgroup-secret
#          - secret/sso-ssl-secret
#          - serviceaccount/sso-service-account
#       tags:
#          - clean

     - name: Deleting any previously create files
       file: path=./{{ item }} state=absent
       ignore_errors: True
       with_items: 
          - xpaas.key
          - xpaas.crt
          - xpaas.srl
          - sso-https.jks
          - sso.csr
          - sso.crt
          - truststore.jks
          - jgroups.jceks
       tags:
          - clean
          - keystore

     - name: Generate CA Certificate 1/2
       command: openssl req -new -newkey rsa:4096 -x509 -keyout xpaas.key -out xpaas.crt -days 365 -subj "/CN=xpaas-sso-demo.ca" -passin pass:{{ password }} -passout pass:{{ password }}
       tags:
          - keystore

     - name: Generate CA Certificate 2/2
       command: keytool -genkeypair -keyalg RSA -keysize 2048 -dname "CN=secure-sso.{{ domain }}" -alias sso-https-key -keystore sso-https.jks -storepass {{ password }} -keypass {{ password }} -noprompt
       tags:
          - keystore

     - name: Sign the Certificate Sign Request with the CA Certificate 1/2
       command: keytool -certreq -keyalg rsa -alias sso-https-key -keystore sso-https.jks -file sso.csr -storepass {{ password }} -noprompt
       tags:
          - keystore

     - name: Sign the Certificate Sign Request with the CA Certificate 2/2
       command: openssl x509 -req -CA xpaas.crt -CAkey xpaas.key -in sso.csr -out sso.crt -days 365 -CAcreateserial -passin pass:{{ password }}
       tags:
          - keystore

     - name: Import the CA into SSL keystore
       command: keytool -import -file xpaas.crt -alias xpaas.ca -keystore sso-https.jks -storepass {{ password }} -noprompt
       tags:
          - keystore

     - name: Import the CA into a new truststore keystore
       command: keytool -import -file sso.crt -alias sso-https-key -keystore sso-https.jks -storepass {{ password }} -noprompt
       tags:
          - keystore
     
     - name: Generate a secure key for JGroups keystore 1/2
       command: keytool -import -file xpaas.crt -alias xpaas.ca -keystore truststore.jks -storepass {{ password }} -noprompt
       tags:
          - keystore
          - jgroups

     - name: Generate a secure key for JGroups keystore 2/2
       command: keytool -genseckey -alias jgroups -storetype JCEKS -keystore jgroups.jceks -keypass {{ password }} -storepass {{ password }} -noprompt
       tags:
          - keystore
          - jgroups

     - name: Creating a Secret for JGroups
       command: oc secret new sso-jgroup-secret jgroups.jceks --namespace {{ namespace }}
       tags:
          - jgroups

     - name: Creating a Secret for SSL
       command: oc secret new sso-ssl-secret sso-https.jks truststore.jks --namespace {{ namespace }}

     - name: Creating a Service Account 
       command: oc create serviceaccount sso-service-account --namespace {{ namespace }}

     - name: Linking both Secrets into Service Account
       command: oc secrets link sso-service-account sso-jgroup-secret sso-ssl-secret --namespace {{ namespace }}

     - name: "Giving permission into Namespace: {{ namespace }}"
       command: oc policy add-role-to-user view system:serviceaccount:{{ namespace }}:sso-service-account --namespace {{ namespace }}

     - name: "Creating application: sso71-mysql"
       command: oc new-app sso71-mysql-persistent -p APPLICATION_NAME=sso -p HOSTNAME_HTTP=sso.{{ domain }} -p HOSTNAME_HTTPS=secure-sso.{{ domain }} -p DB_DATABASE=sso -p SERVICE_ACCOUNT_NAME=sso-service-account -p HTTPS_SECRET=sso-ssl-secret -p HTTPS_KEYSTORE=sso-https.jks -p HTTPS_KEYSTORE_TYPE=JKS -p HTTPS_NAME=sso-https-key -p HTTPS_PASSWORD={{ password }} -p DB_USERNAME={{ username }} -p DB_PASSWORD={{ password }} -p JGROUPS_ENCRYPT_SECRET=sso-jgroup-secret -p JGROUPS_ENCRYPT_KEYSTORE=jgroups.jceks -p JGROUPS_ENCRYPT_NAME=jgroups -p JGROUPS_ENCRYPT_PASSWORD={{ password }} -p SSO_TRUSTSTORE_SECRET=sso-ssl-secret -p SSO_ADMIN_USERNAME={{ username }} -p SSO_ADMIN_PASSWORD={{ password }} --namespace {{ namespace }}

     - name: Deleting unecessary files
       file: path=./{{ item }} state=absent
       ignore_errors: True
       with_items:
          - xpaas.key
          - xpaas.crt
          - xpaas.srl
          - sso.csr
          - sso.crt
